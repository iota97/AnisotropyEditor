#version 440

layout (binding = 1, rgba16f) uniform coherent readonly image2D dirTexture;
layout (binding = 2, rgba16f) uniform coherent writeonly image2D outTexture;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

const float PI = 3.14159265359;

void main()
{
    float val = sin((2*imageLoad(dirTexture, ivec2(gl_GlobalInvocationID.xy)).b-1)*PI);
    val += sin(2*(imageLoad(dirTexture, ivec2(gl_GlobalInvocationID.xy)+ivec2(0, 1)).b-1)*PI);
    val += sin(2*(imageLoad(dirTexture, ivec2(gl_GlobalInvocationID.xy)+ivec2(1, 0)).b-1)*PI);
    val += sin(2*(imageLoad(dirTexture, ivec2(gl_GlobalInvocationID.xy)+ivec2(1, 1)).b-1)*PI);
    val = val*0.125+0.5;

    imageStore(outTexture, ivec2(gl_GlobalInvocationID.xy), vec4(val, val, val, 1.0));
}
