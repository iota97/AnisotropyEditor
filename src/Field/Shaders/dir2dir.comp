#version 440

layout (binding = 1, rgba16f) uniform coherent readonly image2D dirTexture;
layout (binding = 2, rgba16f) uniform coherent writeonly image2D outTexture;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

const float PI = 3.14159265359;

vec4 dirToColor(vec2 dir, float phase) {
    dir = vec2(dir.x, -dir.y);
    return vec4(dir*0.5+0.5, 0.5, phase/PI*0.5+0.5);
}

void main()
{
    vec3 data =imageLoad(dirTexture,  ivec2(gl_GlobalInvocationID.xy)).xyz;
    vec2 dir = data.xy*2-1;
    float phase = (2*data.z-1)*PI;
    imageStore(outTexture, ivec2(gl_GlobalInvocationID.xy), dirToColor(dir, phase));
}
